name: Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test source
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.14'
      - run: go vet && go test

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GOOS: [ 'darwin', 'linux', 'windows' ]
        GOARCH: [ '386', 'amd64' ]
    name: Build ${{ matrix.GOOS }}/${{ matrix.GOARCH }}
    needs: [test]
    env:
      GOOS: ${{ matrix.GOOS }}
      GOARCH: ${{ matrix.GOARCH }}
      EXTENSION: ''
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.14'
      - name: Build ${{ matrix.GOOS }}/${{ matrix.GOARCH }}
        run: |
          [[ "$GOOS" == "windows" ]] && echo "::set-env name=EXTENSION::.exe" && EXTENSION=".exe";
          go build -v -o "env-$GOOS-$GOARCH""$EXTENSION";
      - name: Upload ${{ matrix.GOOS }}/${{ matrix.GOARCH }} artifact
        uses: actions/upload-artifact@v1
        with:
          name: env-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ env.EXTENSION }}
          path: env-${{ matrix.GOOS }}-${{ matrix.GOARCH }}${{ env.EXTENSION }}


