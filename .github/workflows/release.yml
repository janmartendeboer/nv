name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  test:
    runs-on: ubuntu-latest
    name: Test source
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - run: make test

  draft:
    runs-on: ubuntu-latest
    name: Draft release
    needs: [test]
    outputs:
      upload_url: ${{ steps.draft.outputs.upload_url }}
    steps:
      - name: Draft release ${{ github.ref }}
        id: draft
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  build-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        GOARCH: [ 'amd64' ]
    name: Build linux/${{ matrix.GOARCH }} DEB
    needs: [draft]
    env:
      GOOS: 'linux'
      GOARCH: ${{ matrix.GOARCH }}
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - name: Build linux/${{ matrix.GOARCH }}
        run: |
          VERSION="$(basename "/${{ github.ref }}")"
          VERSION="${VERSION##v}"

          make dist/nv_${{ matrix.GOARCH }}.deb VERSION="$VERSION"

          # Build application
          BUILD_DIR="nv_${VERSION}_${{ matrix.GOARCH }}/DEBIAN"
          BUILD_BIN="${BUILD_DIR}/../usr/bin"

          mkdir -p "$BUILD_DIR"
          mkdir -p "$BUILD_BIN"
          go build -v -o "$BUILD_BIN/nv"
          cat <<CONFIG > "$BUILD_DIR/control"
          Package: nv
          Version: $VERSION
          Architecture: ${{ matrix.GOARCH }}
          Essential: no
          Priority: optional
          Maintainer: Jan-Marten de Boer
          Description: Environment lookup
          CONFIG

          dpkg-deb --build "$(dirname "$BUILD_DIR")/"

          # Build plugins
          BUILD_DIR="nv_${VERSION}_${{ matrix.GOARCH }}_plugins/DEBIAN"
          BUILD_PLUGINS="${BUILD_DIR}/../usr/lib/nv"

          mkdir -p "$BUILD_DIR"
          mkdir -p "$BUILD_PLUGINS"
          cat <<CONFIG > "$BUILD_DIR/control"
          Package: nv-plugins
          Version: $VERSION
          Architecture: ${{ matrix.GOARCH }}
          Essential: no
          Priority: optional
          Maintainer: Jan-Marten de Boer
          Description: Environment lookup plugins
          CONFIG

          if [[ "$GOARCH" == "amd64" ]]; then
            for plugin in plugins/*/plugin.go; do
              go build \
                -buildmode plugin \
                -o "$BUILD_PLUGINS/$(basename ${plugin%%.go}).so" \
                $plugin;
            done

            dpkg-deb --build "$(dirname "$BUILD_DIR")/"
          fi

          echo "::set-env name=VERSION::$VERSION"
      - name: Upload linux/${{ matrix.GOARCH }} application DEB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft.outputs.upload_url }}
          asset_path: ./nv_${{ env.VERSION }}_${{ matrix.GOARCH }}.deb
          asset_name: nv_${{ matrix.GOARCH }}.deb
          asset_content_type: application/vnd.debian.binary-package
      - name: Upload linux/${{ matrix.GOARCH }} plugins DEB
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: ${{ matrix.GOARCH == 'amd64' }}
        with:
          upload_url: ${{ needs.draft.outputs.upload_url }}
          asset_path: ./nv_${{ env.VERSION }}_${{ matrix.GOARCH }}_plugins.deb
          asset_name: plugins_${{ matrix.GOARCH }}.deb
          asset_content_type: application/vnd.debian.binary-package

  community-update:
    name: Update community resoures
    runs-on: ubuntu-latest
    needs: [build-deb]
    steps:
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: '1.13'
      - name: Trigger community cache flush
        run: |
          VERSION="$(basename "/${{ github.ref }}")"
          GO111MODULE=on go get "janmarten.name/nv@$VERSION"
