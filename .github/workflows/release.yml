name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  draft:
    runs-on: ubuntu-latest
    name: Draft release
    outputs:
      upload_url: ${{ steps.draft.outputs.upload_url }}
    steps:
      - name: Draft release ${{ github.ref }}
        id: draft
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  build-deb:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - nv_amd64.deb
          - nv_ext_encoding-xml.deb
    name: Build ${{ matrix.package }}
    needs: [draft]
    env:
      GOOS: linux
      GOARCH: amd64
    steps:
      - uses: actions/checkout@v2
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Build ${{ matrix.package }}
        run: make dist/${{ matrix.package }}
      - name: Upload ${{ matrix.package }}
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.draft.outputs.upload_url }}
          asset_path: dist/${{ matrix.package }}
          asset_name: ${{ matrix.package }}
          asset_content_type: application/vnd.debian.binary-package

  community-update:
    name: Update community resoures
    runs-on: ubuntu-latest
    needs: [build-deb]
    steps:
      - name: Setup go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13
      - name: Trigger community cache flush
        run: |
          VERSION="$(basename "/${{ github.ref }}")"
          GO111MODULE=on go get "janmarten.name/nv@$VERSION"
